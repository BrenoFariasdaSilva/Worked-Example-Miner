diff --git a/zookeeper/build.xml b/zookeeper/build.xml
index 2b30ad15a..8fc5d7e88 100644
--- a/zookeeper/build.xml
+++ b/zookeeper/build.xml
@@ -10,7 +10,6 @@
     <property name="src_generated.dir" value="${build.dir}/java/generated" />
     <property name="build.classes" value="${build.dir}/classes" />
     <property name="config.dir" value="${basedir}/java/config" />
-    <property name="lib.dir" value="${basedir}/java/lib" />
     <property name="build.docs" value="${build.dir}/docs" />
     <property name="build.javadoc" value="${build.docs}/api" />
 
@@ -33,9 +32,6 @@
     <target name="jute">
         <mkdir dir="${build.classes}" />
         <javac srcdir="${src.dir}" destdir="${build.classes}" target="1.5" source="1.5" includes="com/yahoo/jute/**" debug="on">
-            <classpath>
-                <fileset dir="${lib.dir}" />
-            </classpath>
         </javac>
     </target>
 
@@ -49,9 +45,6 @@
             </classpath>
         </java>
         <javac srcdir="${src_generated.dir}" destdir="${build.classes}" target="1.5" source="1.5" debug="on">
-            <classpath>
-                <fileset dir="${lib.dir}" />
-            </classpath>
         </javac>
     </target>
 
@@ -61,9 +54,6 @@
             <classpath>
                 <fileset dir="${build.classes}" />
             </classpath>
-            <classpath>
-                <fileset dir="${lib.dir}" />
-            </classpath>
         </javac>
         <copy todir="${build.classes}">
          <fileset
@@ -80,9 +70,6 @@
               <include name="*.jar"/>
            </fileset>
          </classpath>
-         <classpath>
-           <fileset dir="${lib.dir}"/>
-         </classpath>
       </javac>
     </target>
 
@@ -94,12 +81,6 @@
         <javadoc packagenames="com.yahoo.*" destdir="${build.javadoc}" author="true" version="true" use="true" windowtitle="${Name} ${version} API" doctitle="${Name} ${version} API" bottom="Copyright &amp;copy; ${year} Yahoo Inc.">
             <packageset dir="${src.dir}" />
             <link href="${javadoc.link.java}" />
-            <classpath>
-                <fileset dir="${lib.dir}">
-                    <include name="**/*.jar" />
-                </fileset>
-                <pathelement path="${build.classes}" />
-            </classpath>
         </javadoc>
     </target>
 
@@ -114,15 +95,10 @@
         </jar>
     </target>
 
-    <target name="cleanswig">
-      <subant target="clean">
-        <fileset file="c/swig/build.xml"/>
-      </subant>
-     </target>
     <!-- ====================================================== -->
     <!-- Clean.  Delete the build files, and their directories  -->
     <!-- ====================================================== -->
-    <target name="clean" depends="cleanswig">
+    <target name="clean">
         <delete dir="${build.dir}" />
         <delete file="${jar.name}" />
     </target>
@@ -130,14 +106,13 @@
     <!-- ====================================================== -->
     <!-- Run unit tests                                         -->
     <!-- ====================================================== -->
-    <target name="test" depends="jar, compileswig, compile-test">
+    <target name="test" depends="jar, compile-test">
         <delete dir="${test.log.dir}" />
         <delete dir="${test.tmp.dir}" />
         <mkdir dir="${test.log.dir}" />
         <mkdir dir="${test.tmp.dir}" />
         <junit showoutput="${test.output}" printsummary="yes" haltonfailure="no" fork="yes" maxmemory="512m" dir="${basedir}" timeout="${test.timeout}" errorProperty="tests.failed" failureProperty="tests.failed">
             <sysproperty key="build.test.dir" value="${test.tmp.dir}" />
-            <sysproperty key="java.library.path" value="${basedir}/c/swig"/>
 	    <classpath>
                 <pathelement path="${build.testclasses}" />
             </classpath>
@@ -146,9 +121,6 @@
                  <include name="*.jar"/>
                </fileset>
             </classpath>
-            <classpath>
-              <fileset dir="${lib.dir}"/>
-             </classpath>
 
             <formatter type="${test.junit.output.format}" />
             <batchtest todir="${test.log.dir}" unless="testcase">
@@ -175,11 +147,6 @@
         <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpath="${findbugs.home}/lib/findbugs-ant.jar" />
         <mkdir dir="${findbugs.out.dir}" />
         <findbugs home="${findbugs.home}" output="xml:withMessages" excludeFilter="${findbugs.exclude.file}" outputFile="${findbugs.report.xmlfile}" effort="max" jvmargs="-Xmx512M">
-            <auxClasspath>
-                <fileset dir="${lib.dir}">
-                    <include name="**/*.jar" />
-                </fileset>
-            </auxClasspath>
             <sourcePath path="${src.dir}" />
             <class location="${basedir}/zookeeper.jar" />
         </findbugs>
diff --git a/zookeeper/zookeeper.jute b/zookeeper/zookeeper.jute
new file mode 100755
index 000000000..441d360b3
--- /dev/null
+++ b/zookeeper/zookeeper.jute
@@ -0,0 +1,177 @@
+module com.yahoo.zookeeper.data {
+    class Id {
+    	ustring scheme;
+    	ustring id;
+    }
+    class ACL {
+        int perms;
+	Id id;
+    }
+    class Stat {
+        long czxid;
+        long mzxid;
+        long ctime; 
+        long mtime;
+        int version; 
+        int cversion; 
+        int aversion; 
+	long ephemeralOwner;
+    }
+}
+module com.yahoo.zookeeper.proto {
+    class op_result_t {
+        int rc;
+        int op;
+        buffer response;
+    }
+
+    class ConnectRequest {
+        int protocolVersion;
+	long lastZxidSeen;
+        int timeOut;
+        long sessionId;
+        buffer passwd;
+    }
+    class ConnectResponse {
+        int protocolVersion;
+        int timeOut;
+        long sessionId;
+        buffer passwd;
+    }
+    class RequestHeader {
+        int xid;
+        int type;
+    }
+    class AuthPacket {
+	int type;
+	ustring scheme;
+	buffer auth;
+    }
+    class ReplyHeader {
+        int xid;
+        long zxid;
+	int err;
+    }
+    class GetDataRequest {
+        ustring path;
+        boolean watch;
+    }
+    class SetDataRequest {
+        ustring path;
+        buffer data;
+        int version;
+    }
+    class SetDataResponse {
+        com.yahoo.zookeeper.data.Stat stat;
+    }
+    class CreateRequest {
+        ustring path;
+        buffer data;
+        vector<com.yahoo.zookeeper.data.ACL> acl;
+        int flags;
+    }
+    class DeleteRequest {
+        ustring path;
+        int version;
+    }
+    class GetChildrenRequest {
+        ustring path;
+        boolean watch;
+    }
+    class GetMaxChildrenRequest {
+        ustring path;
+    }
+    class GetMaxChildrenResponse {
+        int max;
+    }
+    class SetMaxChildrenRequest {
+        ustring path;
+        int max;
+    }
+    class GetACLRequest {
+        ustring path;
+    }
+    class SetACLRequest {
+        ustring path;
+        vector<com.yahoo.zookeeper.data.ACL> acl;
+        int version;
+    }
+    class SetACLResponse {
+        com.yahoo.zookeeper.data.Stat stat;
+    }
+    class WatcherEvent {
+        int type;  // event type
+        int state; // state of the Keeper client runtime
+        ustring path; 
+    }
+
+    class CreateResponse {
+        ustring path;
+    }
+    class ExistsRequest {
+        ustring path;
+        boolean watch;
+    }
+    class ExistsResponse {
+	com.yahoo.zookeeper.data.Stat stat;
+    }
+    class GetDataResponse {
+        buffer data;
+        com.yahoo.zookeeper.data.Stat stat;
+    }
+    class GetChildrenResponse {
+        vector<ustring>children;
+    }
+    class GetACLResponse {
+        vector<com.yahoo.zookeeper.data.ACL> acl;
+        com.yahoo.zookeeper.data.Stat stat;
+    }
+}
+
+module com.yahoo.zookeeper.server.quorum {
+    class QuorumPacket {
+        int type; // Request, Ack, Commit, Ping
+        long zxid;
+	buffer data; // Only significant when type is request
+	vector<com.yahoo.zookeeper.data.Id> authinfo;
+    }
+}
+
+module com.yahoo.zookeeper.txn {
+    class TxnHeader {
+        long clientId;
+	int cxid;
+	long zxid;
+        long time;
+        int type;
+    }
+    class CreateTxn {
+        ustring path;
+        buffer data;
+        vector<com.yahoo.zookeeper.data.ACL> acl;
+	boolean ephemeral;
+    }
+    class DeleteTxn {
+        ustring path;
+    }
+    class SetDataTxn {
+        ustring path;
+        buffer data;
+        int version;
+    }
+    class SetACLTxn {
+        ustring path;
+        vector<com.yahoo.zookeeper.data.ACL> acl;
+        int version;
+    }
+    class SetMaxChildrenTxn {
+        ustring path;
+        int max;
+    }
+    class CreateSessionTxn {
+	int timeOut;
+    }
+    class ErrorTxn {
+        int err;
+    }
+}
