diff --git a/zookeeper/java/src/com/yahoo/zookeeper/ZooKeeper.java b/zookeeper/java/src/com/yahoo/zookeeper/ZooKeeper.java
index efac82dca..ec2713630 100755
--- a/zookeeper/java/src/com/yahoo/zookeeper/ZooKeeper.java
+++ b/zookeeper/java/src/com/yahoo/zookeeper/ZooKeeper.java
@@ -739,7 +739,6 @@ public static void main(String args[]) throws NumberFormatException,
 
     private static DataCallback dataCallback = new DataCallback() {
 
-        @Override
         public void processResult(int rc, String path, Object ctx, byte[] data,
                 Stat stat) {
             System.out.println("rc = " + rc + " path = " + path + " data = "
diff --git a/zookeeper/test/com/yahoo/zookeeper/test/AsyncTest.java b/zookeeper/test/com/yahoo/zookeeper/test/AsyncTest.java
index c6d85eae5..32e0290de 100644
--- a/zookeeper/test/com/yahoo/zookeeper/test/AsyncTest.java
+++ b/zookeeper/test/com/yahoo/zookeeper/test/AsyncTest.java
@@ -79,11 +79,9 @@ synchronized void decOut() {
             notifyAll();
         }
 
-        @Override
         public void process(WatcherEvent event) {
         }
 
-        @Override
         public void processResult(int rc, String path, Object ctx, String name) {
             try {
                 decOut();
@@ -93,7 +91,6 @@ public void processResult(int rc, String path, Object ctx, String name) {
             }
         }
 
-        @Override
         public void processResult(int rc, String path, Object ctx) {
         }
     }
diff --git a/zookeeper/test/com/yahoo/zookeeper/test/GenerateLoad.java b/zookeeper/test/com/yahoo/zookeeper/test/GenerateLoad.java
index 08de705c0..4a05eb741 100644
--- a/zookeeper/test/com/yahoo/zookeeper/test/GenerateLoad.java
+++ b/zookeeper/test/com/yahoo/zookeeper/test/GenerateLoad.java
@@ -1,20 +1,15 @@
 package com.yahoo.zookeeper.test;
 
-import java.io.BufferedInputStream;
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
-import java.io.FileInputStream;
+import java.io.BufferedReader;
 import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
-import java.io.InputStream;
+import java.io.InputStreamReader;
 import java.io.OutputStream;
 import java.io.PrintStream;
 import java.net.ServerSocket;
 import java.net.Socket;
-import java.net.SocketException;
-import java.net.UnknownHostException;
-import java.util.ArrayList;
+import java.util.Calendar;
 import java.util.Collections;
 import java.util.Date;
 import java.util.HashMap;
@@ -24,14 +19,13 @@
 import java.util.Random;
 import java.util.Set;
 
-import com.yahoo.zookeeper.KeeperException;
-import com.yahoo.zookeeper.Watcher;
-import com.yahoo.zookeeper.ZooDefs;
-import com.yahoo.zookeeper.ZooKeeper;
 import com.yahoo.zookeeper.AsyncCallback.DataCallback;
 import com.yahoo.zookeeper.AsyncCallback.StatCallback;
+import com.yahoo.zookeeper.KeeperException;
+import com.yahoo.zookeeper.Watcher;
 import com.yahoo.zookeeper.ZooDefs.CreateFlags;
 import com.yahoo.zookeeper.ZooDefs.Ids;
+import com.yahoo.zookeeper.ZooKeeper;
 import com.yahoo.zookeeper.data.Stat;
 import com.yahoo.zookeeper.proto.WatcherEvent;
 
@@ -41,7 +35,7 @@ public class GenerateLoad {
     static Set<SlaveThread> slaves = Collections
             .synchronizedSet(new HashSet<SlaveThread>());
 
-    static HashMap<Long, Long> totalByTime = new HashMap<Long, Long>();
+    static Map<Long, Long> totalByTime = new HashMap<Long, Long>();
 
     static long currentInterval;
 
@@ -89,12 +83,10 @@ static class SlaveThread extends Thread {
             start();
         }
 
-        @SuppressWarnings("deprecation")
         public void run() {
             try {
                 System.out.println("Connected to " + s);
-                DataInputStream is = new DataInputStream(
-                        new BufferedInputStream(s.getInputStream()));
+                BufferedReader is = new BufferedReader(new InputStreamReader(s.getInputStream()));
                 String result;
                 while ((result = is.readLine()) != null) {
                     String timePercentCount[] = result.split(" ");
@@ -194,8 +186,11 @@ public void run() {
                         }
                         total += count;
                         number++;
-                        Date date = new Date(lastInterval * INTERVAL);
-                        String report = lastInterval + " " + date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds()
+                        Calendar calendar = Calendar.getInstance();
+                        calendar.setTimeInMillis(lastInterval * INTERVAL);
+                        String report = lastInterval + " " + calendar.get(Calendar.HOUR_OF_DAY)
+                                                           + ":" + calendar.get(Calendar.MINUTE)
+                                                           + ":" + calendar.get(Calendar.SECOND)
                                 + " "
                                 + percentage
                                 + "% "
@@ -244,7 +239,7 @@ synchronized static void sendChange(int percentage) {
     
         static int errors;
       
-        static Object statSync = new Object();
+        static final Object statSync = new Object();
         
         static int finished;
         
@@ -321,7 +316,6 @@ public void run() {
             }
         }
 
-        @Override
         public void process(WatcherEvent event) {
             System.err.println(event);
             synchronized(this) {
@@ -344,7 +338,6 @@ public void process(WatcherEvent event) {
             }
         }
 
-        @Override
         public void processResult(int rc, String path, Object ctx, byte[] data,
                 Stat stat) {
             decOutstanding();
@@ -361,7 +354,6 @@ public void processResult(int rc, String path, Object ctx, byte[] data,
 
         }
 
-        @Override
         public void processResult(int rc, String path, Object ctx, Stat stat) {
             decOutstanding();
             synchronized(statSync) {
@@ -423,7 +415,7 @@ public static void main(String[] args) throws InterruptedException {
                 ss = new ServerSocket(port);
                 new AcceptorThread();
                 new ReporterThread();
-                DataInputStream is = new DataInputStream(System.in);
+                BufferedReader is = new BufferedReader(new InputStreamReader(System.in));
                 String line;
                 while ((line = is.readLine()) != null) {
                     try {
@@ -464,7 +456,7 @@ public static void main(String[] args) throws InterruptedException {
                         .parseInt(hostPort[1]));
                 new ZooKeeperThread();
                 new SenderThread();
-                DataInputStream is = new DataInputStream(s.getInputStream());
+                BufferedReader is = new BufferedReader(new InputStreamReader(s.getInputStream()));
                 String line;
                 while((line = is.readLine()) != null) {
                     percentage = Integer.parseInt(line);
diff --git a/zookeeper/test/com/yahoo/zookeeper/test/TestHammer.java b/zookeeper/test/com/yahoo/zookeeper/test/TestHammer.java
index 0661870b5..b28760bed 100644
--- a/zookeeper/test/com/yahoo/zookeeper/test/TestHammer.java
+++ b/zookeeper/test/com/yahoo/zookeeper/test/TestHammer.java
@@ -37,7 +37,7 @@ public static void main(String[] args) {
             }
             System.out.println("creates/sec=" + (REPS*1000/(System.currentTimeMillis()-startTime)));
     }
-    @Override
+
     public void processResult(int rc, String path, Object ctx) {
         // TODO Auto-generated method stub
         
