diff --git a/zookeeper/c/src/zk_log.c b/zookeeper/c/src/zk_log.c
index 6decb1bbf..6d006beab 100644
--- a/zookeeper/c/src/zk_log.c
+++ b/zookeeper/c/src/zk_log.c
@@ -7,14 +7,66 @@
 #include <unistd.h>
 #include <stdarg.h>
 
+#define TIME_NOW_BUF_SIZE 128
+#define FORMAT_LOG_BUF_SIZE 2048
+
+#ifdef THREADED
+#include <pthread.h>
+
+static pthread_key_t time_now_buffer;
+static pthread_key_t format_log_msg_buffer;
+
+void freeBuffer(void* p){
+    if(p) free(p);
+}
+
+__attribute__((constructor)) void prepareTSDKeys() {
+    pthread_key_create (&time_now_buffer, freeBuffer);
+    pthread_key_create (&format_log_msg_buffer, freeBuffer);
+}
+
+char* getTSData(pthread_key_t key,int size){
+    char* p=pthread_getspecific(key);
+    if(p==0){
+        int res;
+        p=calloc(1,size);
+        res=pthread_setspecific(key,p);
+        if(res!=0){
+            fprintf(stderr,"Failed to set TSD key: %d",res);
+        }
+    }
+    return p;
+}
+
+char* get_time_buffer(){
+    return getTSData(time_now_buffer,TIME_NOW_BUF_SIZE);
+}
+
+char* get_format_log_buffer(){  
+    return getTSData(format_log_msg_buffer,FORMAT_LOG_BUF_SIZE);
+}
+#else
+char* get_time_buffer(){
+    static char buf[TIME_NOW_BUF_SIZE];
+    return buf;    
+}
+
+char* get_format_log_buffer(){
+    static char buf[FORMAT_LOG_BUF_SIZE];
+    return buf;
+}
+
+#endif
+
 ZooLogLevel logLevel=LOG_LEVEL_INFO;
 
 static const char* time_now(){
-    static char now_str[128];
     struct timeval tv;
+    char* now_str=get_time_buffer();
+    if(!now_str)
+        return "time_now(): Failed to allocate memory buffer";
     
     gettimeofday(&tv,0);
-    //sprintf(now_str,"%ld.%03d",tv.tv_sec,(int)(tv.tv_usec/1000));
     sprintf(now_str,"%ld.%03d.%03d",tv.tv_sec,(int)(tv.tv_usec/1000),(int)(tv.tv_usec%1000));
     return now_str;
 }
@@ -26,23 +78,37 @@ void log_message(ZooLogLevel curLevel,int line,const char* funcName,
             "ZOO_INFO","ZOO_DEBUG"};
     static pid_t pid=0;
     if(pid==0)pid=getpid();
+#ifndef THREADED
     fprintf(LOGSTREAM, "%s:%d:%s@%s@%d: %s\n", time_now(),pid,
             dbgLevelStr[curLevel],funcName,line,message);
+#else
+    fprintf(LOGSTREAM, "%s:%d(0x%x):%s@%s@%d: %s\n", time_now(),pid,
+            (unsigned long)pthread_self(),
+            dbgLevelStr[curLevel],funcName,line,message);
+#endif
     fflush(LOGSTREAM);
 }
 
 const char* format_log_message(const char* format,...)
 {
-    static char buf[2048];
     va_list va;
+    char* buf=get_format_log_buffer();
+    if(!buf)
+        return "format_log_message: Unable to allocate memory buffer";
+    
     va_start(va,format);
-    vsnprintf(buf, sizeof(buf)-1,format,va);
+    vsnprintf(buf, FORMAT_LOG_BUF_SIZE-1,format,va);
     va_end(va); 
     return buf;
 }
 
 void setCurrentLogLevel(ZooLogLevel level)
 {
+    if(level==0){
+        // disable logging (unit tests do this)
+        logLevel=(ZooLogLevel)0;
+        return;
+    }
     if(level<LOG_LEVEL_ERROR)level=LOG_LEVEL_ERROR;
     if(level>LOG_LEVEL_DEBUG)level=LOG_LEVEL_DEBUG;
     logLevel=level;
diff --git a/zookeeper/c/src/zk_log.h b/zookeeper/c/src/zk_log.h
index 18880cb75..9b18b3a69 100644
--- a/zookeeper/c/src/zk_log.h
+++ b/zookeeper/c/src/zk_log.h
@@ -3,11 +3,15 @@
 
 #include <zookeeper.h>
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 extern ZOOAPI ZooLogLevel logLevel;
 #define LOGSTREAM stderr
 
-#define LOG_ERROR(x) \
-    log_message(LOG_LEVEL_DEBUG,__LINE__,__func__,format_log_message x)
+#define LOG_ERROR(x) if(logLevel>=LOG_LEVEL_ERROR) \
+    log_message(LOG_LEVEL_ERROR,__LINE__,__func__,format_log_message x)
 #define LOG_WARN(x) if(logLevel>=LOG_LEVEL_WARN) \
     log_message(LOG_LEVEL_WARN,__LINE__,__func__,format_log_message x)
 #define LOG_INFO(x) if(logLevel>=LOG_LEVEL_INFO) \
@@ -22,4 +26,8 @@ void log_message(ZooLogLevel curLevel, int line,const char* funcName,
 
 const char* format_log_message(const char* format,...);
 
+#ifdef __cplusplus
+}
+#endif
+
 #endif /*ZK_LOG_H_*/
