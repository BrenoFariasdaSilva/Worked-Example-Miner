diff --git a/zookeeper/c/Makefile.am b/zookeeper/c/Makefile.am
index 66f2ba573..98e8605bc 100644
--- a/zookeeper/c/Makefile.am
+++ b/zookeeper/c/Makefile.am
@@ -2,28 +2,38 @@
 include $(top_srcdir)/aminclude.am
 
 AM_CPPFLAGS = -Iinclude -Igenerated
-AM_CFLAGS = -Wall -Werror
+AM_CFLAGS = -Wall -Werror 
+CXXFLAGS += -Wall
 
-LIB_LDFLAGS = -no-undefined -version-info 1
+LIB_LDFLAGS = -no-undefined -version-info 2
 
 pkginclude_HEADERS = include/zookeeper.h include/recordio.h generated/zookeeper.jute.h
 EXTRA_DIST=LICENSE
 
-lib_LTLIBRARIES = libzookeeper_st.la
-
 COMMON_SRC = src/zookeeper.c include/zookeeper.h \
 	src/recordio.c include/recordio.h include/proto.h \
 	src/zk_adaptor.h generated/zookeeper.jute.c \
 	src/zk_log.h src/zk_log.c
-	
-libzookeeper_st_la_SOURCES = $(COMMON_SRC) src/st_adaptor.c
+
+noinst_LTLIBRARIES = libzkst.la
+libzkst_la_SOURCES =$(COMMON_SRC) src/st_adaptor.c
+
+lib_LTLIBRARIES = libzookeeper_st.la
+libzookeeper_st_la_SOURCES =
+libzookeeper_st_la_LIBADD=libzkst.la
+libzookeeper_st_la_DEPENDENCIES=libzkst.la
 libzookeeper_st_la_LDFLAGS = $(LIB_LDFLAGS)
 
 if WANT_SYNCAPI
+noinst_LTLIBRARIES += libzkmt.la
+libzkmt_la_SOURCES =$(COMMON_SRC) src/mt_adaptor.c
+libzkmt_la_CFLAGS = -DTHREADED
+
 lib_LTLIBRARIES += libzookeeper_mt.la
-libzookeeper_mt_la_SOURCES = $(COMMON_SRC) src/mt_adaptor.c
-libzookeeper_mt_la_CFLAGS = -DTHREADED
-libzookeeper_mt_la_LDFLAGS = $(LIB_LDFLAGS) -lpthread
+libzookeeper_mt_la_SOURCES =
+libzookeeper_mt_la_LIBADD=libzkmt.la -lpthread
+libzookeeper_mt_la_DEPENDENCIES=libzkmt.la
+libzookeeper_mt_la_LDFLAGS = $(LIB_LDFLAGS)
 endif
 
 bin_PROGRAMS = cli_st
@@ -38,5 +48,41 @@ cli_mt_LDADD = libzookeeper_mt.la
 cli_mt_CFLAGS = -DTHREADED
 endif
 
-clean-local:
-	$(RM) $(DX_CLEANFILES)
\ No newline at end of file
+#########################################################################
+# build and run unit tests
+
+EXTRA_DIST+=$(wildcard tests/*.cc) $(wildcard tests/*.h) \
+	tests/wrappers.opt tests/wrappers-mt.opt
+
+TEST_SOURCES = tests/TestDriver.cc tests/LibCMocks.cc tests/LibCSymTable.cc \
+	tests/MocksBase.cc  tests/ZKMocks.cc tests/Util.cc \
+	tests/TestOperations.cc tests/TestZookeeperInit.cc tests/TestZookeeperClose.cc
+
+SYMBOL_WRAPPERS=$(shell cat tests/wrappers.opt)
+
+check_PROGRAMS = zktest-st
+nodist_zktest_st_SOURCES = $(TEST_SOURCES)
+zktest_st_LDADD = libzkst.la $(CPPUNIT_LIBS)
+zktest_st_CXXFLAGS = -DUSE_STATIC_LIB $(CPPUNIT_CFLAGS)
+zktest_st_LDFLAGS = -static-libtool-libs $(SYMBOL_WRAPPERS)
+
+if WANT_SYNCAPI
+  check_PROGRAMS += zktest-mt
+  nodist_zktest_mt_SOURCES = $(TEST_SOURCES) tests/PthreadMocks.cc
+  zktest_mt_LDADD = libzkmt.la -lpthread $(CPPUNIT_LIBS)
+  zktest_mt_CXXFLAGS = -DUSE_STATIC_LIB -DTHREADED $(CPPUNIT_CFLAGS)
+  SYMBOL_WRAPPERS_MT=$(SYMBOL_WRAPPERS) $(shell cat tests/wrappers-mt.opt)
+  zktest_mt_LDFLAGS = -static-libtool-libs $(SYMBOL_WRAPPERS_MT)
+endif
+
+run-check: check
+	./zktest-st $(TEST_OPTIONS)
+if WANT_SYNCAPI
+	./zktest-mt $(TEST_OPTIONS)
+endif
+
+clean-local: clean-check
+	$(RM) $(DX_CLEANFILES)
+
+clean-check:
+	$(RM) $(nodist_zktest_st_OBJECTS) $(nodist_zktest_mt_OBJECTS)
diff --git a/zookeeper/c/configure.ac b/zookeeper/c/configure.ac
index d071884c0..5c7e9bca8 100644
--- a/zookeeper/c/configure.ac
+++ b/zookeeper/c/configure.ac
@@ -3,7 +3,7 @@
 
 AC_PREREQ(2.59)
 
-AC_INIT([zookeeper C client],1.0.0,[zookeeper-user@lists.sourceforge.net],[zookeeper])
+AC_INIT([zookeeper C client],1.1.0,[zookeeper-user@lists.sourceforge.net],[zookeeper])
 AC_CONFIG_SRCDIR([src/zookeeper.c])
 AC_CHECK_FILES([generated/zookeeper.jute.c generated/zookeeper.jute.h],[],
 	[AC_MSG_ERROR([jute files are missing! Please run "ant compile_jute" while in the zookeeper top level directory.])
@@ -22,10 +22,10 @@ DX_INIT_DOXYGEN([zookeeper],[c-doc.Doxyfile],[docs])
 
 # initialize automake
 AM_INIT_AUTOMAKE([-Wall foreign])
-#AM_INIT_AUTOMAKE
 AC_CONFIG_HEADER([config.h])
 
 # Checks for programs.
+AM_PATH_CPPUNIT(1.10.2)
 AC_PROG_CC
 AM_PROG_CC_C_O
 AC_PROG_INSTALL
@@ -36,8 +36,8 @@ AC_PROG_LIBTOOL
 
 AC_ARG_ENABLE([debug],
  [AS_HELP_STRING([--enable-debug],[enable debug build [default=no]])],
- [CFLAGS="-g -O0"],[CFLAGS="-O2"])
-
+ [CFLAGS="-g -O0";CXXFLAGS="-g -O0"],[CFLAGS="-O2";CXXFLAGS="-O2"])
+ 
 AC_ARG_WITH([syncapi],
  [AS_HELP_STRING([--with-syncapi],[build with support for SyncAPI [default=yes]])],
  [],[with_syncapi=yes])
@@ -64,8 +64,6 @@ AC_CHECK_HEADERS([arpa/inet.h fcntl.h netdb.h netinet/in.h stdlib.h string.h sys
 # Checks for typedefs, structures, and compiler characteristics.
 AC_C_CONST
 AC_C_INLINE
-#AC_TYPE_INT32_T -- this macro only available in autoconf 2.61
-#AC_TYPE_INT64_T -- this macro only available in autoconf 2.61
 AC_TYPE_PID_T
 AC_HEADER_TIME
 
